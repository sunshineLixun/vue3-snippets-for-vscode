{
	"vue3": {
		"": {
			"prefix": "setup",
			"body": [
				"<script lang=\"ts\" setup>",
				"/** import */",
				"import { ref, reactive, computed, watch, onActivated, onMounted } from \"vue\";",
				"",
				"/** defineOptions */",
				"",
				"defineOptions({",
				"  name: \"xxxx\",",
				"});",
				"",
				"/** defineProps */",
				"const props = defineProps();",
				"",
				"/** defineEmits */",
				"const emit = defineEmits();",
				"/** 枚举 */",
				"",
				"/** ref */",
				"const ref = ref();",
				"",
				"/** reactive */",
				"const reactive1 = reactive();",
				"",
				"/** useHooks */",
				"const { A, B, C, D } = useHooks();",
				"",
				"/** computed */",
				"const computedProps = computed(() => {});",
				"",
				"/** handleXXXOpen */",
				"function handleXXXOpen() {}",
				"/** handleSearch */",
				"function handleSearch() {}",
				"/** init */",
				"function init() {}",
				"",
				"/** watch */",
				"watch(",
				"  () => XXX,",
				"  (val: boolean) => {}",
				");",
				"",
				"/** 初始化调用 */",
				"init();",
				"",
				"/** 生命周期 */",
				"onActivated(() => {});",
				"onMounted(() => {});",
				"</script>",
				"",
				"<template></template>",
				"",
				"<style lang=\"scss\" scoped></style>",
				""
			],
			"description": "sjzy vue3 代码规范模板"
		}
	},
	"template": {
		"prefix": "template",
		"body": [
			"<template>",
			"\t<div$2>",
			"\t\t$0",
			"\t</div>",
			"</template>"
		],
		"description": "template模版"
	},
	"script": {
		"prefix": "script",
		"body": [
			"<script setup lang=\"ts\">",
			"\t$0",
			"</script>"
		],
		"description": "script with setup and tslang"
	},
	"style": {
		"prefix": "style",
		"body": [
			"<style lang=\"$0\" scoped>",
			"\t",
			"</style>"
		],
		"description": "style element with lang attribute"
	},
	"styleCss": {
		"prefix": "css",
		"body": [
			"<style scoped>",
			"\t$0",
			"</style>"
		],
		"description": "css style"
	},
	"styleScss": {
		"prefix": "scss",
		"body": [
			"<style lang=\"scss\" scoped>",
			"\t$0",
			"</style>"
		],
		"description": "Scss style"
	},
	"styleSass": {
		"prefix": "sass",
		"body": [
			"<style lang=\"sass\" scoped>",
			"\t$0",
			"</style>"
		],
		"description": "Sass style"
	},
	"styleLess": {
		"prefix": "less",
		"body": [
			"<style lang=\"less\" scoped>",
			"\t$0",
			"</style>"
		],
		"description": "Less style"
	}
}